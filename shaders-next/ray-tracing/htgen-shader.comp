#version 460 core
#extension GL_GOOGLE_include_directive : enable

#include "../include/driver.glsl"
#include "../include/mathlib.glsl"
#include "../include/ballotlib.glsl"
#include "../include/structs.glsl"
#include "../include/rayslib.glsl"
#include "../include/random.glsl"

// use partition by 8x8
layout (local_size_x = R_BLOCK_WIDTH, local_size_y = R_BLOCK_HEIGHT) in;

layout (binding = 0, set = 2, std430) readonly buffer VT_GEN_EXAMPLE {
    mat4x4 camInv, projInv;
    vec4 sceneRes;
    int enable360, variant, r1, r2;
} cameraUniform;

layout ( rgba32f, binding = 2, set = 2 ) uniform image2D _devImages[1];
#define ColorOutput _devImages[0]

// planned ray generation shader example
void main() {
    VtRay ray;

    ivec2 wh = stageUniform.size.xy;
    ivec2 xy = ivec2(Global_Idx.xy);
    vec2 sceneResInv = 1.0f / vec2(wh);
    vec2 rnd = vec2(0.5f);
    vec2 coord = (floor(vec2(xy)) + clamp(rnd, vec2(0.0001f), vec2(0.9999f))) * sceneResInv;

    vec4 dir = vec4(0.f), orig = mult4(cameraUniform.camInv, vec4(vec3(0.0f), 1.0f)), eye = orig;
    IFANY (cameraUniform.enable360 == 1) {
        vec2 pic = (coord * vec2(2.f,1.f) + vec2(0.5f,0.0f)) * PI;
        dir = mult4(cameraUniform.camInv, vec4(dcts(pic), 0.f));
    } else {
        vec4 co = divW(mult4(cameraUniform.camInv, mult4(cameraUniform.projInv, vec4(coord * 2.0f - 1.0f, 0.999f, 1.0f))));
        orig = divW(mult4(cameraUniform.camInv, mult4(cameraUniform.projInv, vec4(coord * 2.0f - 1.0f, 0.001f, 1.0f))));
        dir = vec4(normalize(co.xyz - orig.xyz)*vec3(1.f,1.f,1.f), 0.0f);
    }

    ray.dcolor = uvec2(0u.xx);
    writeColor(ray.dcolor, 1.f.xxxx);
    parameterb(RAY_ACTIVED, ray.dcolor.y, true_);
    
    ray.origin.xyz = orig.xyz;
    ray.cdirect = lcts(dir.xyz);

    // filtering off rays by resolution
    [[flatten]] if (xy.x < wh.x && xy.y < wh.y && max3_vec(f16_f32(ray.dcolor).xyz) >= 1e-4f) {
        ISTORE(ColorOutput, ivec2(Global_Idx.xy), vec4(0.f.xxx, 1.f));
        vtReuseRays(ray, Global_Idx.xy, 0, xy.y * wh.x + xy.x); // prefer strict layout
    }

    LGROUP_BARRIER;
}
