#version 460 core
#extension GL_GOOGLE_include_directive : enable


#define VERTEX_FILLING
#define USE_PUSH_CONSTANT

#include "../include/driver.glsl"
#include "../include/structs.glsl"
//#include "../include/vertex.glsl"
#include "../include/mathlib.glsl"
#include "../include/ballotlib.glsl"
#include "../include/vertex-input.glsl"

LOCAL_SIZE_LAYOUT;

// for connection with vertex input v2
layout ( binding = 0, set = 0 ) uniform imageBuffer vertexOut; // vertex outputs
layout ( binding = 1, set = 0 ) uniform imageBuffer attribOut[8]; // attribute outputs
layout ( binding = 2, set = 0 ) uniform uimageBuffer indiceOut; // indice outputs


void main(){
    const int wsize = int(vertexBlock.primitiveCount);
    const int gS = int(gl_WorkGroupSize.x);
    const int wgs = int(gl_NumWorkGroups.x);
    const int wID = int(gl_WorkGroupID.x);
    const int lID = int(Local_Idx);
    const int rng = gS*wgs;

    // process vertex assembly
    for (int w=0;w<wsize;w+=rng) {
        int globalID = w + wID * gS + lID;
        IFALL (globalID >= wsize) break;
        if (globalID < wsize && globalID >= 0) {

            

        }
    }
}
